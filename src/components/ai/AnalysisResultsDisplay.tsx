import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { Brain, Calendar, Download, Share, Maximize2, TrendingUp, Shield, PieChart, BarChart3 } from "lucide-react";
import { MarkdownRenderer } from "./MarkdownRenderer";

interface AnalysisResultsDisplayProps {
  title: string;
  content: string;
  analysisType?: 'portfolio' | 'market' | 'risk' | 'comprehensive';
  timestamp?: string;
  onExpand?: () => void;
  onDownload?: () => void;
  onShare?: () => void;
}

const getAnalysisIcon = (type: string) => {
  switch (type) {
    case 'portfolio':
      return <PieChart className="h-5 w-5" />;
    case 'market':
      return <TrendingUp className="h-5 w-5" />;
    case 'risk':
      return <Shield className="h-5 w-5" />;
    default:
      return <Brain className="h-5 w-5" />;
  }
};

const getAnalysisColor = (type: string) => {
  switch (type) {
    case 'portfolio':
      return 'text-blue-600 bg-blue-50 border-blue-200';
    case 'market':
      return 'text-green-600 bg-green-50 border-green-200';
    case 'risk':
      return 'text-orange-600 bg-orange-50 border-orange-200';
    default:
      return 'text-primary bg-primary/10 border-primary/20';
  }
};

export function AnalysisResultsDisplay({
  title,
  content,
  analysisType = 'comprehensive',
  timestamp,
  onExpand,
  onDownload,
  onShare
}: AnalysisResultsDisplayProps) {
  const formatTimestamp = (ts?: string) => {
    if (!ts) return new Date().toLocaleString();
    return new Date(ts).toLocaleString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div className="space-y-4">
      {/* Header Card */}
      <Card className="border border-border/50 bg-gradient-to-r from-background to-secondary/20">
        <div className="p-6">
          <div className="flex items-start justify-between">
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <div className={`p-2 rounded-lg border ${getAnalysisColor(analysisType)}`}>
                  {getAnalysisIcon(analysisType)}
                </div>
                <div>
                  <h2 className="text-xl font-semibold text-foreground">{title}</h2>
                  <p className="text-sm text-muted-foreground">
                    AI-powered financial analysis
                  </p>
                </div>
              </div>
              
              <div className="flex items-center space-x-4">
                <Badge variant="secondary" className="space-x-1">
                  <Calendar className="h-3 w-3" />
                  <span className="text-xs">{formatTimestamp(timestamp)}</span>
                </Badge>
                <Badge variant="outline" className="space-x-1">
                  <Brain className="h-3 w-3" />
                  <span className="text-xs">GPT-4.1 Analysis</span>
                </Badge>
              </div>
            </div>

            {/* Action Buttons */}
            <div className="flex items-center space-x-2">
              {onExpand && (
                <Button variant="ghost" size="sm" onClick={onExpand}>
                  <Maximize2 className="h-4 w-4" />
                </Button>
              )}
              {onShare && (
                <Button variant="ghost" size="sm" onClick={onShare}>
                  <Share className="h-4 w-4" />
                </Button>
              )}
              {onDownload && (
                <Button variant="ghost" size="sm" onClick={onDownload}>
                  <Download className="h-4 w-4" />
                </Button>
              )}
            </div>
          </div>
        </div>
      </Card>

      {/* Content Card */}
      <Card className="border border-border/50">
        <div className="p-6">
          <div className="space-y-6">
            {/* Analysis Content */}
            <div className="prose prose-sm max-w-none">
              <MarkdownRenderer 
                content={content}
                className="text-sm leading-relaxed"
              />
            </div>

            <Separator />

            {/* Footer */}
            <div className="flex items-center justify-between text-xs text-muted-foreground">
              <div className="flex items-center space-x-4">
                <span>Analysis generated by AI Financial Analyst</span>
                <Badge variant="outline" className="text-xs">
                  Professional Grade
                </Badge>
              </div>
              <div className="flex items-center space-x-2">
                <span>Last updated:</span>
                <span className="font-medium">{formatTimestamp(timestamp)}</span>
              </div>
            </div>
          </div>
        </div>
      </Card>
    </div>
  );
}